name: "Branch Verification"

on:
  push:
    branches-ignore:
      - main

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: tite-5g00ev16-3003/2024-final-project-kaytee1-backend
  FRONTEND_IMAGE_NAME: tite-5g00ev16-3003/2024-final-project-kaytee1-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    # Set a timeout in case something get stuck or hang in the tests
    timeout-minutes: 5

    steps:
      # get the code from the repository unto the machine
      - name: Fetch code
        uses: actions/checkout@v4.1.1

      - name: Install Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "16"

      # use an action to start the mysql service on the runner
      - name: Install MySQL server
        uses: shogo82148/actions-setup-mysql@v1.31.0
        with:
          mysql-version: "8.0"
          auto-start: true

      # use cli to create a database and set the root password

      - name: Setup MySQL
        run: |
          mysql -uroot -h127.0.0.1 -e 'SELECT version()'
          mysql -h 127.0.0.1 -P 3306 -u root -e 'CREATE DATABASE react_store;'
          mysql -h 127.0.0.1 -P 3306 -u root -e 'SHOW DATABASES;'
          mysql -h 127.0.0.1 -P 3306 -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';"
          mysql -h 127.0.0.1 -P 3306 -u root -e 'FLUSH PRIVILEGES' -ppassword
      # use the cli client to see the database
      - name: Seed Database
        working-directory: ./db
        run: mysql -h 127.0.0.1 -P 3306 -u root -ppassword react_store < init.sql

      # Create .env file for the test job
      - name: Create backend testing env file
        run: echo "${{ secrets.TEST_JOB_ENV }}" > ./backend/.env

      #Backend tests
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run the backend tests
        working-directory: ./backend
        run: npm run test

      #Frontend tests
      # Install frontend dependecies
      - name: Install the Node modules
        working-directory: ./frontend
        run: npm install

      # Add script to modify the import line
      - name: Modify lodash import line
        working-directory: ./frontend
        run: sed -i 's/lodash\/isEqualWith/lodash\/isEqualWith.js/' node_modules/@testing-library/jest-dom/dist/matchers-ab264010.mjs

      - name: Print npm install logs
        working-directory: ./frontend
        run: npm install --verbose

      # Run frontend tests
      - name: testing-library tests
        working-directory: ./frontend
        run: npm run test:ci

  build:
    runs-on: ubuntu-latest

    needs: test

    permissions:
      contents: read
      packages: write

    steps:
      - name: Fetch code
        uses: actions/checkout@v4.1.1

      - name: Install Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "16"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the backend image
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}

      - name: Build the frontend image
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
